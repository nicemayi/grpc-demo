// Code generated by goctl. DO NOT EDIT!
// Source: calculator.proto

package calculatorservice

import (
	"context"

	"go-server/rpc/calculator"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddRequest  = calculator.AddRequest
	AddResponse = calculator.AddResponse

	CalculatorService interface {
		Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	}

	defaultCalculatorService struct {
		cli zrpc.Client
	}
)

func NewCalculatorService(cli zrpc.Client) CalculatorService {
	return &defaultCalculatorService{
		cli: cli,
	}
}

func (m *defaultCalculatorService) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	client := calculator.NewCalculatorServiceClient(m.cli.Conn())
	return client.Add(ctx, in, opts...)
}
